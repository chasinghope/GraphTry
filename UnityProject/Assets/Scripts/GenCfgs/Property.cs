
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class Property : Luban.BeanBase
{
    public Property(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["minAck"].IsNumber) { throw new SerializationException(); }  MinAck = _buf["minAck"]; }
        { if(!_buf["maxAck"].IsNumber) { throw new SerializationException(); }  MaxAck = _buf["maxAck"]; }
        { if(!_buf["costPower"].IsNumber) { throw new SerializationException(); }  CostPower = _buf["costPower"]; }
        { if(!_buf["hitrate"].IsNumber) { throw new SerializationException(); }  Hitrate = _buf["hitrate"]; }
        { if(!_buf["coolingTime"].IsNumber) { throw new SerializationException(); }  CoolingTime = _buf["coolingTime"]; }
        { if(!_buf["DesContent"].IsString) { throw new SerializationException(); }  DesContent = _buf["DesContent"]; }
    }

    public static Property DeserializeProperty(JSONNode _buf)
    {
        return new Property(_buf);
    }

    /// <summary>
    /// 属性id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 最小攻击
    /// </summary>
    public readonly float MinAck;
    /// <summary>
    /// 最大攻击
    /// </summary>
    public readonly float MaxAck;
    /// <summary>
    /// 耐力
    /// </summary>
    public readonly float CostPower;
    /// <summary>
    /// 命中率
    /// </summary>
    public readonly float Hitrate;
    /// <summary>
    /// 冷却时间（s）
    /// </summary>
    public readonly float CoolingTime;
    /// <summary>
    /// 属性描述
    /// </summary>
    public readonly string DesContent;
   
    public const int __ID__ = -928497163;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "minAck:" + MinAck + ","
        + "maxAck:" + MaxAck + ","
        + "costPower:" + CostPower + ","
        + "hitrate:" + Hitrate + ","
        + "coolingTime:" + CoolingTime + ","
        + "DesContent:" + DesContent + ","
        + "}";
    }
}

}
